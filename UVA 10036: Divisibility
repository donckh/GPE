/* Accepted by UVA 10036: Divisibility
Question:  given nums N and divisor K, find the combination(+/-) of nums is dividable.
1. store all nums to array
2. turn all nums to positive and take the mod of all nums
3. combine(+/-) every num one by one until the last num, +K to prevent minus idx of int array
4. check f[N][0] == 1: divisible
*/

#include <iostream>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <cmath>
 
using namespace std;
 
int a[10004];
int f[10004][104];
 
int main()
{
	int T,N,K;
	while ( scanf("%d",&T) != EOF ) 
	while ( T -- ) {
		scanf("%d%d",&N,&K);
		for ( int i = 0 ; i < N ; ++ i )
			scanf("%d",&a[i]);  //store input nums
		for ( int i = 0 ; i < N ; ++ i )
			a[i] = abs(a[i])%K;  //store positive nums and take the mod of num
		
		memset( f, 0, sizeof(f) );
		f[0][0] = 1;
		for ( int i = 0 ; i < N ; ++ i ){
            for ( int j = 0 ; j < K ; ++ j ){
                if ( f[i][j] ) {  //n, k
                    f[i+1][(j+K+a[i])%K] = 1;  //prevent minus idx at k (f[n][k]): + K
                    f[i+1][(j+K-a[i])%K] = 1;
                }
            }
        }
		if ( f[N][0] ) printf("Divisible\n");
		else printf("Not divisible\n");
	}
	return 0;
}
