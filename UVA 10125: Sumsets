/* Accepted by UVA 10125: Sumsets
Question: find max sumset number of given set such that a + b + c = d is max.
1. get the sequence input to an vector.
2. sort vector
3. use 4 for loop for d, a, b, c which d start from the end(num--), a start from 0, b start from a+1, c start from b+1
4. in case a==d || b==d || c==d continue.
5. in case a + b + c==d break.
6. finally output no solution if no FOUND.
*/

#include <iostream>
#include <stdio.h>
#include <string.h>  //memset
#include <algorithm>  //sort

using namespace std;

int main(){
    int seq[1000], count;
    bool found = false;

    while(cin >> count)
    {
        if(count==0) break;
        for (int i = 0; i < count; i++)
        {        
            cin >> seq[i];
        }
        int a, b, c, d;
        sort(seq, seq+count);
        for (d = count-1; d >= 0 && !found; d--)
        {
            for (a = 0; a < count && !found; a++)
            {
                if(a==d) continue;
                // sum_a = seq[a];
                for (b = a+1; b < count && !found; b++)
                {
                    if (b==d) continue;
                    //sum_b = seq[a] + seq[b];
                    for (c = b+1; c < count && !found; c++)
                    {
                        if (c==d) continue;
                        if (seq[a] + seq[b] + seq[c]==seq[d])
                        {
                            found = true;
                            //cout << seq[d] << endl;
                            break;
                        }   
                    }   
                }   
            }
        }
        if(!found) cout << "no solution" << endl;
        else cout << seq[d+1] << endl;
        found = false;
    }
    return 0;
}
