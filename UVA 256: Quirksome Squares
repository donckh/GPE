/* Accept by UVA 256: Quirksome Squares
Question: find all num of digit n (including less than n) that (x+y)^2=xy
1. num of digit n is xy, length of num x: n/2
2. 2 for loop to find out all x, y combination, if x,y are k digit, store in k
3. index also need to divide to k dimension
4. output number need to -1 as k start from 0
*table store in array, k is digits of one num, 
*%d: show int, %0*d, num: compensate 0 until digit = num
*/
#include <iostream>
using namespace std;
int main(){
    int dp[4][50], ans_index[4]={0};
    for(int i=0; i<10000;++i){
        for(int j=0;j<10000;++j){
            int digit_len = 10;
            for(int k=0; k<4;++k, digit_len *=10){
                if ((i+j)*(i+j)==i*digit_len+j && i/digit_len==0 && j/digit_len==0){
                    dp[k][ans_index[k]++] = i* digit_len +j;
                }
            }
        }
    }
    int num, digit;
    while(scanf("%d", &num)!=EOF){
        digit = num/2-1;
        for(int i=0; i<ans_index[digit]; ++i){
            printf("%0*d\n", num, dp[digit][i]);
        }
    }
    return 0;
}
